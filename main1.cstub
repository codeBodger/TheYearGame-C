char finalBinaryOperators[3][101];
long long finalUnaryOperators[7][101];
char finalWhichOrder[101];
char finalScore[101];

char binaryOperators[3] = { 0,0,0 };
long long unaryOperators[7] = { 0,0,0,0 , 0,0,0 };

void evalAndUpdateSecondBest4(float a, float b, float c, float d) {}
void evalAndUpdateSecondBest3(float a, float b, float c) {}
void evalAndUpdateSecondBest2(float a, float b) {}
void evalAndUpdateSecondBest1(float a) {}

void evalAndUpdateWorst3(float a, float b, float c) {}
void evalAndUpdateWorst2(float a, float b) {}
void evalAndUpdateWorst1(float a) {}

int main() {
	// Print out some additional information to the user regarding things that they might need to implement
	printf("Here is a list of the approved operators for they year in which this was written.\n");
	printf("If there is a different set of approved operators this year, you will need to implement the change.\n");
	printf("	1. +	(addition)		(not implemented)\n");
	printf("	2. -	(subtraction/negative)	(not implemented)\n");
	printf("	3. *	(multiplication)	(not implemented)\n");
	printf("	4. /	(division)		(not implemented)\n");
	printf("	5. âˆš	(square root)		(not implemented)\n");
	printf("	6. ^	(exponants)		(not implemented)\n");
	printf("	7. !	(factorial)		(not implemented)\n");
	printf("	8. !!	(double factorial)	(not implemented)\n");
	printf("	9. ()	(parentheses)		(unnecessary to implement)\n\n");

	printf("In addition to the legal operators, the following must be kept in mind:\n");
	printf("	1. Multidigit numbers are legal				(not implemented)\n");
	printf("	2. The negative operator must be implemented separately	(not implemented)\n");
	printf("	3. Decimals are legal					(not implemented)\n");
	printf("	4. 0^0 is equal to 1					(not implemented)\n");
	printf("	5. Use of multidigit numbers should be avoided		(not implemented)\n");
	printf("	6. Keeping the digits in order should be preffered	(not implemented)\n\n");
